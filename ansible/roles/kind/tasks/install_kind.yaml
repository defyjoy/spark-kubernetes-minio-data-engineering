## GET INFO ON KIND CLUSTER AND CHECK IF THE CLUSTER EXISTS
- name: Get infos on kind container
  docker_container_info:
    name: spark-kubernetes-minio-data-engineering-control-plane
  register: result

## DEBUG INFO IF THE KIND CLUSTER EXISTS OR NOT. IF THE KIND CLUSTER DOES NOT EXIST, CREATE THE KIND CLUSTER
- name: Does kind cluster exist?
  debug:
    msg: "The container {{ 'exists' if result.exists else 'does not exist' }}"

## REGISTER INFO ON DOCKER KIND NETWORK INFO AND REGISTER INTO OUTPUT FOR kind_network
- name: Get infos on network named {{ KIND_NETWORK }} in docker networks
  docker_network_info:
    name: "{{ KIND_NETWORK }}"
  register: kind_network

## DEBUG INFO IF THE KIND NETWORK EXISTS OR NOT. IF THE KIND NETWORK DOES NOT EXIST, CREATE THE KIND NETWORK
- name: Does docker network named {{ KIND_NETWORK }} exist?
  debug:
    msg: "The network {{ 'exists' if kind_network.exists else 'does not exist' }}"

## CREATE KIND NETWORK IF IT DOES NOT EXIST
- name: Create docker network - {{ KIND_NETWORK }}
  when: kind_network.exists != true
  environment:
    KIND_EXPERIMENTAL_DOCKER_NETWORK: "{{ KIND_NETWORK }}"
  ansible.builtin.shell: scripts/docker.sh

## CREATE KIND CLUSTER IF IT DOES NOT EXIST
- name: Create Default kind cluster
  when: result.exists != true
  ansible.builtin.command: kind create cluster --name spark-kubernetes-minio-data-engineering --config kind-config.yaml
  environment:
    KIND_EXPERIMENTAL_DOCKER_NETWORK: "{{ KIND_NETWORK }}"

## CHANGE KUBECONTEXT TO THE KIND CLUSTER
- name: Change cluster
  ansible.builtin.shell: kubectx kind-spark-kubernetes-minio-data-engineering

## GET INFO ON KIND CLUSTER ON THE CONTAINER LEVEL FOR CONTROL PLANE
- name: Get infos on container
  docker_container_info:
    name: spark-kubernetes-minio-data-engineering-control-plane
  register: kind_spark_cluster_controlplane

## DEBUG INFO ON NETWORK INFORMATION
- name: Print network information about spark container
  debug:
    msg: "'{{ kind_spark_cluster_controlplane.container.NetworkSettings.Networks.kind_network.IPAddress }} Kind cluster Control Plane IP"

## REGISTER SPARK KIND CLUSTER CONTROL PLANE IP
- set_fact:
    kind_ip_address: "{{ kind_spark_cluster_controlplane.container.NetworkSettings.Networks.kind_network.IPAddress }}"

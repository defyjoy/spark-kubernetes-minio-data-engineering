- name: Install ArgoCD CLI
  community.general.homebrew:
    name: argocd
    state: present

- name: Check If ArgoCD is deployed
  kubernetes.core.k8s_info:
    # kubeconfig: "{{ kubeconfig }}"
    api_version: v1
    kind: Pod
    namespace: argocd
  register: pod_list
  until: pod_list|json_query('resources[*].status.phase')|unique == ["Running"]
  ignore_errors: true

- name: Install ArgoCD
  when: pod_list|json_query('resources[*].status.phase')|unique != ["Running"]
  ansible.builtin.shell:
    cmd: kustomize build k8s/manifests/argocd | kubectl apply -f -

- name: Wait until argocd is up
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: argocd
    wait_sleep: 10
    wait_timeout: 360
  register: pod_list
  until: pod_list|json_query('resources[*].status.phase')|unique == ["Running"]

- name: Reload ArgoCD repo server
  when: pod_list|json_query('resources[*].status.phase')|unique == ["Running"]
  ansible.builtin.shell: kubectl scale -n argocd deployment/argocd-server --replicas=0 && kubectl scale -n argocd deployment/argocd-server --replicas=1

- name: ArgoCD Password Reset
  when: pod_list|json_query('resources[*].status.phase')|unique == ["Running"]
  ansible.builtin.shell: scripts/argocd.sh
  ignore_errors: true

- name: Install kustomize applications
  when: pod_list|json_query('resources[*].status.phase')|unique == ["Running"]
  ansible.builtin.import_tasks:
    file: kustomize.yaml
